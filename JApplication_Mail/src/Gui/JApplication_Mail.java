/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Class.MessageView;
import Utilities.ThreadReception;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.InvocationTargetException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Header;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Part;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Vince
 */
public class JApplication_Mail extends javax.swing.JFrame {

    public DefaultListModel dlm = new DefaultListModel();
    private String user, mdp;
    private EnvoiMessage guiEnvoiMessage;
    private getHeaders guiHeaders;
    private Login log;
    private ThreadReception threadRecep;
    GuiPieceAttachee guiPieceAttachee = new GuiPieceAttachee(this, true);
    
    /**
     * Creates new form JApplication_Mail
     */
    public JApplication_Mail() {
        initComponents();
        log = new Login(this, true);
        guiEnvoiMessage = new EnvoiMessage(this, true);
        guiHeaders = new getHeaders(this, true);
        log.setVisible(true);
        threadRecep = new ThreadReception(300000, this.getUser(), this.getMdp(), "pop-mail.outlook.com", this);
        threadRecep.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTF_From = new javax.swing.JTextField();
        jTF_Subject = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTA_Message = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("From:");

        jLabel2.setText("Subject:");

        jLabel3.setText("Message:");

        jTF_From.setEditable(false);

        jTF_Subject.setEditable(false);

        jList1.setModel(dlm);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jTA_Message.setEditable(false);
        jScrollPane3.setViewportView(jTA_Message);

        jButton1.setText("Charger plus de messages");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Visualiser pièces attachées");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem2.setText("Envoyer message");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Tracer message");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem1.setText("Quitter");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("A propos");

        jMenuItem3.setText("Des développeurs");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTF_Subject))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addComponent(jTF_From, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(166, 166, 166))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTF_From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTF_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Créé par Vincent Hooghen et Thibault Julien dans le cadre de nos études");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:    
        getGuiEnvoiMessage().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            guiHeaders.jTA_Headers.setText("");
            int i = jList1.getSelectedIndex();
            if(i!=-1)
            {
                MessageView msgView = (MessageView) dlm.get(i);
                Message msg = msgView.getMessage();
                Enumeration e = msg.getAllHeaders();
                Header h = (Header)e.nextElement();
                while (e.hasMoreElements())
                {
                    System.out.println(h.getName() + " --> " + h.getValue());
                    String name = h.getName();
                    String value = h.getValue();
                    if(value.length()>0 && name.equalsIgnoreCase("Received"))
                    {
                        if(!lookForBy(value).equalsIgnoreCase("NULL"))
                            guiHeaders.jTA_Headers.append("By : "+lookForBy(value)+"\n");
                        if(!lookForFrom(value).equalsIgnoreCase("NULL"))
                            guiHeaders.jTA_Headers.append("From : "+lookForFrom(value)+"\n");
                        guiHeaders.jTA_Headers.append("\n");
                        
                    }
                    //guiHeaders.jTA_Headers.append();
                    
                    h = (Header)e.nextElement();
                }
                guiHeaders.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(this, "Erreur - Pas de message selectionné");
        } catch (MessagingException ex) {
            Logger.getLogger(JApplication_Mail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public String lookForBy(String s)
    {
        String ret = "NULL";
        int debut, fin;
        for(int i=0;i<s.length()-1;i++)
        {
            if(s.charAt(i)=='b' && s.charAt(i+1)=='y')
            {
                
                debut = i+3;
                //System.out.println("Début = "+debut);
                // On récupère la partie après l'espace
                while(i+3<s.length() && s.charAt(i+3)!=' ')
                {
                    i++;
                }
                fin = i+3;
                //System.out.println("Fin = "+fin);
                ret = s.substring(debut, fin);
            }
            
        }
        
        return ret;
    }
    
    public String lookForFrom(String s)
    {
        String ret = "NULL";
        int debut, fin;
        for(int i=0;i<s.length()-4;i++)
        {
            if(s.charAt(i)=='f' && s.charAt(i+1)=='r' && s.charAt(i+2)=='o' && s.charAt(i+3)=='m')
            {
                // On récupère la partie après l'espace
                debut = i+5;
                while(i+5<s.length() && s.charAt(i+5)!=' ')
                {
                    i++;
                }
                fin = i+5;
                //ystem.out.println("Fin = "+fin);
                ret = s.substring(debut, fin);
            }      
        }
        return ret;
    }
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        
        if (!evt.getValueIsAdjusting()) {
            jTF_From.setText("");
            jTF_Subject.setText("");
            jTA_Message.setText("");
            try {
                int i = jList1.getSelectedIndex();
                MessageView msgView = (MessageView) dlm.get(i);
                Message msg = msgView.getMessage();
                //jTF_From.setText(msg.getFrom()[0].toString());
                jTF_Subject.setText(msg.getSubject());
                if(msg.isMimeType("multipart/*"))
                {
                    Multipart msgMP = (Multipart)msg.getContent();
                    int np = msgMP.getCount();
                    // Scan des BodyPart
                    for (int j=0; j<np; j++)
                    {
                        Part p = ((Multipart)msgMP).getBodyPart(j);
                        
                        if (p.isMimeType("text/plain"))
                        {
                            jTA_Message.setText((String)p.getContent());
                        }   
                    } // fin for j
                 // fin for i
                }
                if(msg.isMimeType("text/*"))
                {
                    jTA_Message.setText((String)msg.getContent());
                }
                
                //jTA_Message.setText((String)msg.getContent());
                } catch (MessagingException ex) {
                    Logger.getLogger(JApplication_Mail.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(JApplication_Mail.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        threadRecep.chargePlusMessages();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int i = jList1.getSelectedIndex();
        if(i!=-1)
        {
            MessageView msgView = (MessageView) dlm.get(i);
            guiPieceAttachee.setMessage(msgView.getMessage());
        }
        guiPieceAttachee.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JApplication_Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JApplication_Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JApplication_Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JApplication_Mail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JApplication_Mail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    public javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTA_Message;
    private javax.swing.JTextField jTF_From;
    private javax.swing.JTextField jTF_Subject;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the user
     */
    public String getUser() {
        return user;
    }

    /**
     * @param user the user to set
     */
    public void setUser(String user) {
        this.user = user;
    }

    /**
     * @return the mdp
     */
    public String getMdp() {
        return mdp;
    }

    /**
     * @param mdp the mdp to set
     */
    public void setMdp(String mdp) {
        this.mdp = mdp;
    }

    /**
     * @return the guiEnvoiMessage
     */
    public EnvoiMessage getGuiEnvoiMessage() {
        return guiEnvoiMessage;
    }

    /**
     * @param guiEnvoiMessage the guiEnvoiMessage to set
     */
    public void setGuiEnvoiMessage(EnvoiMessage guiEnvoiMessage) {
        this.guiEnvoiMessage = guiEnvoiMessage;
    }

    /**
     * @return the log
     */
    public Login getLog() {
        return log;
    }

    /**
     * @param log the log to set
     */
    public void setLog(Login log) {
        this.log = log;
    }
}
