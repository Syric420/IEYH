package Server;

import Database.facility.BeanBD;
import Interfaces.ConsoleServeur;
import Threads.ThreadSer;
import Class.ListeTaches;
import Utilities.ReadProperties;
import java.io.*;
import java.net.*;
import java.security.*;
import java.security.Security;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.bouncycastle.jce.provider.BouncyCastleProvider;


/**
 *
 * @author Mika
 */
public class ServForm extends javax.swing.JFrame implements ConsoleServeur
{
    int port, nbMaxCli;
    ServerSocket SSocket = null;
    Socket CSocket = null;
    BeanBD BD=null;
            
    /**
     * Creates new form ServForm
     */
    
    public ServForm()
    {
        initComponents();
        Security.addProvider(new BouncyCastleProvider());
        try {
            ReadProperties rp = new ReadProperties("/Utilities/config.properties");
            port = Integer.parseInt(rp.getProp("PORT_CARD"));
            nbMaxCli = Integer.parseInt(rp.getProp("NB_MAX_CLI"));
            labelPort.setText(String.valueOf(port));
            TraceEvenements("serveur#initialisation#" + this.getClass());
            //Connexion BD
            BD = new BeanBD();
            BD.setTypeBD("mysql");
            BD.connect();
            //-------------

            buttonStartActionPerformed(null);
        } catch (IOException ex) {
            Logger.getLogger(ServForm.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonStart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelPort = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEvent = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serveur Card");

        buttonStart.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonStart.setText("Start");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        jLabel1.setText("Port:");

        labelPort.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelPort.setText("0");

        tableEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sujet", "Action", "Classe"
            }
        ));
        jScrollPane1.setViewportView(tableEvent);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(buttonStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPort)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelPort))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonStartActionPerformed
    {//GEN-HEADEREND:event_buttonStartActionPerformed
        TraceEvenements("serveur#acquisition du port#" + this.getClass());
        ThreadSer thrs = new ThreadSer(port, nbMaxCli, new ListeTaches(), this, BD);
        thrs.start();
        buttonStart.setEnabled(false);
    }//GEN-LAST:event_buttonStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ServForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ServForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ServForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ServForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ServForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPort;
    private javax.swing.JTable tableEvent;
    // End of variables declaration//GEN-END:variables

    @Override
    public void TraceEvenements(String commentaire)
    {
        Vector<String> ligne = new Vector<String>();
        StringTokenizer parser = new StringTokenizer(commentaire,"#");
        while (parser.hasMoreTokens())
            ligne.add(parser.nextToken());
        DefaultTableModel dtm = (DefaultTableModel)tableEvent.getModel();
        dtm.insertRow(dtm.getRowCount(),ligne);        
    }
}
